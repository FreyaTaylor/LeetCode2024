package src.DoublePointer.SlideWindow;

import java.util.Comparator;
import java.util.PriorityQueue;

public class T2398_maximumRobots {

    /**
     https://leetcode.cn/problems/maximum-number-of-robots-within-budget/description/
     连续子数组不适合二分猜测
     连续子数组首选滑动窗口
     注意[i,j]失败，则包含[i,j]的子数组都会失败！
     */


//    public int maximumRobots(int[] chargeTimes, int[] runningCosts, long budget) {
//
//        int l=0,r=chargeTimes.length-1;
//
//        while (l+1<r){
//            int mid=(l+r)/2;
//            if(check(chargeTimes,runningCosts,budget,mid)){
//                l=mid;
//            }else {
//                r=mid-1;
//            }
//        }
//
//
//        if(l<r && check(chargeTimes,runningCosts,budget,r)){
//            return r;
//        }
//        return l;
//    }
//
//    public boolean check(int[] chargeTimes, int[] runningCosts, long budget, int k) {
//        PriorityQueue<Integer> q = new PriorityQueue<>(new Comparator<Integer>() {
//            @Override
//            public int compare(Integer o1, Integer o2) {
//                return o2 - o1;
//            }
//        });
//
//        long sum = 0l;
//
//        int i = 0;
//        for (; i < k; i++) {
//            q.add(chargeTimes[i]);
//            sum += runningCosts[i];
//        }
//        long temp = q.peek() + k * sum;
//        if (temp <= budget) {
//            return true;
//        }
//
//        int j = 0;
//        for (; i < chargeTimes.length; i++, j++) {
//            q.remove(chargeTimes[j]);
//            q.add(chargeTimes[i]);
//            sum += runningCosts[i] - runningCosts[j];
//
//            temp = q.peek() + k * sum;
//            if (temp <= budget) {
//                return true;
//            }
//        }
//
//        return false;
//    }


    public int maximumRobots(int[] chargeTimes, int[] runningCosts, long budget) {
        PriorityQueue<Integer> q = new PriorityQueue<>(new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o2 - o1;
            }
        });
        long sum = 0l;
        int res=0;
        int l=0,r=0;

        while (r<chargeTimes.length){
            //r
            q.add(chargeTimes[r]);
            sum+=runningCosts[r];

            if(q.peek()+(r-l+1)*sum>budget){
                res= Math.max(res,r-l);
                // 这里只需要l右移一次，因为要想更新res，必须是比当前长度大，这个操作维持每次的长度
                q.remove(chargeTimes[l]);
                sum-=runningCosts[l];
                l++;
            }
            r++;
        }
        res= Math.max(res,r-l);

        return res;
    }

    public static void main(String[] args) {
        int[] chargeTimes = new int[]{3,6,1,3,4};
        int[] runningCosts = new int[]{2,1,3,4,5};
        int budget = 25;


//        chargeTimes = new int[]{11,12,19};
//        runningCosts = new int[]{10,8,7};
//        budget = 19;

        System.out.println(new T2398_maximumRobots().maximumRobots(chargeTimes,runningCosts,budget));
    }

    public static class T424_characterReplacement_1 {
        /**
         * https://leetcode.cn/problems/longest-repeating-character-replacement/
         *
         */


        public int characterReplacement(String s, int k) {
            int[] count = new int[26];
            int l=0,r=0;
            int maxCount=0;
            int maxLen=0;
            while (r<s.length()){
                count[s.charAt(r)-'A']++;
                maxCount=Math.max(maxCount,count[s.charAt(r)-'A']); //maxCount只可能由新引入的字符的数量更新
                if(r-l+1-maxCount>k){
                    maxLen=Math.max(maxLen,r-l);
                    // 移l，这里为什么只要移动一次l就好了？
                    // 因为有了一次maxLen之后，将不再考虑比其小的串了。
                    // 因此，除非maxCount被更新，才可能更新到maxLen
                    // 因此，这里维护了正确的count[],没有维护正确的maxCount，但是我们只需要更大的maxCount
                    // 而maxCount的更新，依赖于count[]，因此只维护正确的count[]就够了。
                    count[s.charAt(l)-'A']--;
                    l++;

                }
                r++; //没必要维护更短的字串
            }
            maxLen=Math.max(maxLen,r-l);
            return maxLen;
        }

        public static void main(String[] args) {
    //        System.out.println(new T424_characterReplacement().characterReplacement("CAAFDAEFFAEECBDFDFAECACBDADDEEFFCDEDBDDEDDEAFEFFCCFDDEFBBABAEACCADFEEBAFFBCBDADCCCAFAFBFCCACBDDBDEFECCDDEECBDEFEDCEDEFFACFFCFEFCCBDCBAEDEBBCDBECCFEDEDBDFAEFBCEFEFECBFCBBAFBAFDFCDCEBAFFDFFABCCABDDAEEEFDFCDECEBEEBCCECACEECBCBBEDBBECAAFDEAADCBDAADCDDFBDDCCFACACBBCDFBCBEFDCAFDBACFCEAAFDEBCDCCFFCEFFECECBFABFACCBACAEFEDCECCFBCCBEDECCBAFDDBEDDABDDADEFADDCDABDDBEECDDDCBDDABECCBBFDBBBCDBFCACBBFFBBBDFDDFFCBBEEAEFEDECAFEDACABAEEAAAFEBEBAEFEACEECEFDECBEDCEFDDFCACFCCDCFBBEBAFABECCACDFBBDFEEDABFEFFFDFFDCCFDAFCFEFBBABCBCFABEBBFDABEAEFDAFDDBFAEBCEEADBAFDBDFBAEACEDADCDADDCDEBBAFBBEEBFFDACCAFFFCCFEEADFECAFBEBCDFADCCECFEEBDFBDEBFEFEEAEEADCECBFEDFBCDEADDFFFDCDFAFCAECBBBBDBAFEBBBEEDABCEDECABDCFBEBAFCEFBECDACEFEBFCEDFCDBBCBFCCBCAACEFDBCDFDDEACAFADCAAEFAAEAECFBAFFFEAFFBCDBEFFEFDDECEEACACFEDFFBDEDCCDDEBEBBDDAAFCCAAADCEBEECFADFEECDDAAFCFDADBBCECADDBEEAEEFBEDBBADAFEAFFBDAEFCBCCBABDEFFADEBEBCEBEBDCECEDCFCEECFBAEEDFBAEDAECEDDCFEEEAEABDDDDBCBABABCBEDDABCEFACBCAFBCFBDFFAEAFDFBAAFDFAECCACBFEAAEDBAFADCADFCBAACBFECFFBDDEDCCBFDFFBCAADDAABEECDBDEFEFABABDDABACCADFFECBAEAFCEBFFAEFCDFACAEBFFCFAFBEFBDACECECFCFABFBEEFFADBDEECADEFAFAECBFDCADFFDFDEADFEBFDBBBDAEEBBDBDBFDEDFDCAAEFBADEDABEECABAACAFFACBBDEECDDDDAAACCBADCCBECACCBEEDBABCDEBFBFECDFEFFCDEFBEFDACDEAADBECBBCBCACEFDECFCACDDABDBAFFDCAFDADDEDBDEEEFBCFEACCBDEFCEFECCCEECBDADBCDBBDEFEDEAEDCEFBAAEACBEDBFFFADCDDFEFFBBACEECBBBBCCDDEEAEAEDEBCADFABDEBBFEEAADBCBFACDDACBDDFFFAEECEFBBDABBADDDDCBCFAAEABFFABCFAADDCFDDDDFEDAFFEEEBBBEEACACDECEDECCAFDECDADBDAFCBCAAEAEECCCCBAFABFADFEABFEABFDAADCCECABDCECEAFAEDAFCDDEABCDBCDCCAEBFDDFCBDBDCEEBBDFCCDADEDCADCCCBEBFCEFACDFCFDBDDFBCBDBACFEECCEBECEBEABDCDCDAFAEBECEFBFABCDDBDFFBAFCFDACEFECABDECFECFBCCFFFEEDAABABDECDBABFCDEFBBAACDEFAEABCDDEAECDFFCFFACFBAFFBBAFDFFAAAFCBCAEACEDFDDEBEBABEFCABACECCFAAECAAEBFFBDADEAAFBADDACFEFBCDCDDEBBAADEEEEFBFCEDDFAAEEFEADEECCADBECAABEECBAFECAFAACFEADBDCBDBCDEDABEBBDAFBDBCBCAFFBBDBDDABBBAEFBADDCBADFFEFFBDFEFDCAAEBFCDABFEFBBADFDBACBEDBABBBBDCCDFDDEBFBADBDDFAABCFDEECCFDBCDACDCDBBEEEEDCAECABAAEFEDAACCDFDCDECFCAEADBFFABCBEAABCCDEEDFBABFDBBCCFDFDDCEBFDCDEBCDAEFCBCEDACACEDEADCEEFBBEEBCCAAADCCFDEBFEEDCDEBEFFECEAFDBCBDCBACEFDBEAFBCCCFECFDEEAFCBEDAAFFFAADFBFFBCAAEEDBAEAADFAFDEAEBEBEEBCAEDCACCBDDDDCBBBABDEAAFEFAFFEDBDEEEACFFFAEBABADEACCDEAFCCCEDCCBABEECEFAEACADDDDBEACEBEFDEEDDBAEEEACDBBBFADCAACDDFACFFAFAECFABADFDDCAFEDECDEDCEABDEFFEFBDECDACDCAECCECCCBCEABBFACDBFDFCECCEFCCEEEABFDDBBFBEDBBAEACEEFDBFFFEECFABBAAEBFBCDECCFCFACBEAEFADACCBEDBFBBFAEBFBCBECCAFBBFFEEEBFBCDACBABCCCAEDCEDADCAFADBABFCCAAABFEEBACFFABCFBFABDFABFEFADAEFDCADCDBFCABCAAFDACFEAFCECFBEDAFBFFBFEAFBACDDEFEEBDEBEDDEBBBACCADBFDCEFABDCBFCFECDFDDFAADEDCCEDCEACDEFEAFEEBAFBDEDBADFDEBCBBCEAEFDEFDDAFCDBEBABBABEEAEEDBEFEBBCEEFBAABFBCFEABDFAFEAADDFCEEBECDDBCFACBECECDEFDEBEECEBEFEDADBDABAEEFFEAFEEBDACDCAEBDAEBACFBABFBEADBDBAADAACADCEBCDCEADEEDDAEDFCFBCDBFAEDAFAACEABFADDEEEEDCFCBABAADEAFEBDEAAEFAAFECDEBEDABDBAFBECFCCEFFFFEADFFFDDCAFCBBFBBBEFBACEEDEACEFFEFCEADAACAAFBBAEACCFBCFABBFDDFCEFCDACACFBEBEADEECFEADCBDFDCFCBBDBAFAFCBFAFEFDAFEDBAEDEDABDEECEBECDFBACEDAFEFABFEDEADCAEAFDECCDEEFCECDBFBCDCCCACADFBDEEEFCBABCAFAAACBECDEACEDBBAFBDFDDCEAAADABDCBDADECCCEFFBBDBDFFAFFBEAAABBAFBFFAEAAFEDFDABDBCFFACECCEAFEFCCCBECEBECEDDFCCFECDFCDDAECDCCDDCCFEAABCECFFCBAFBDBABAEDAEFCAFADEBFECECBEEABFECBCDFFCCFECEECAFDFEFCFFBCAEFADADFEFEEFECCFAECCBCADBEACFCCAFFFFCBABDEBBDFDFCBCDCFDBCEBACEEDAEEFCDCFEFEEBBBEBADEEEBBFCEFEACDFEFFAFECBCCDACCDADABBEDBEFCDCADDDCECCEEBADBABCAABBEDBABABDCEFEEADBAFBCDCBBABEBFADEBBACFCBFBCFBBACFEABEDEBCCAEFDAFFAAADCAFDEBEDABCCDCDADFDFFFBBAACFFEDCCFBDBABCBFFDDDAFBCFFBFACECDDCBCDADAEFCEAEBBDABCBDCFCFAEDEBAFFEAFEBBFECDDEDEDCBAFFDFABBDEFEDDAFBFDDEEBADBFFFEDACDAEAAFADDBDCCDBEEABBBEBBCAFAABFFEAABEACFFFAAFEBCAAEEBEFDDBECECEBCEFCABBDBBABECAAFFDBCDCFDAAFCABBEAAFCDAAEECEBCADCDAFDECDBDDBFCBEDEBDDBFFAEDFBAAAADDECBDDBBECFFFFCEACEEEACDBDCDFFBFBEFFABBAFBCACDBFDCBFAAFCBFCAAACBBEFAACAAACFDACADDDCACACBDBAABDEFCCCFAFAFAACDDBDFBFECFEADEEECABAFDECADDDFADBEDBBAFEBFBEBAEAACDECCACACEDCEFECEFFFBBBDFBCBDBCCDDFCABEDFDCEECAAFFBEEDCEBDCEEEBFAEBBFFCFFCDFDDBBBAECBFEBDEEDCEFDDFBDBCDBBEEFFDEFFCBBFDBCFECBECEBDADEEDDBBEADCFCCAABABACBBCAACFEABBFAADDFEFDAFDDFDBBCCBFCBDEEEBAFDEDDCAEBDCDABCACFFDDCEECDEDCCBCAEFCECFDCDCBCDEEACAEAACBADDCFACABFFBCCEACFEFFACDCFDFCDDCBFEEFCFCDFEDACAAFADDAAAAFCBBBABFAACCEEFABAECCECFFFADEBEEDEECCABAAFCECEDFFBACCCEDCCEACAEEBBCBFACBCAEABCEFEABCEBAFBBECEEABDDFEBBFCDDBCBBCEFFEADCBCDCDFBCBABEBAEFEDFEADBEBFFFBAEEADFDDDDFCEECEBDEFFDCBBCDFAFDDFEADEBADACBDAFDDDCCCEDAAFECFFFFDCADEDDFAFBFDEBDBFABEEAFDBFEEDFDECFCBFCDACDDDADECCFDEFADFFCECCDBEDCDCDFFEACDDABFEEDEBFDFADACEEFACEFCECEEAADFBBDEEAEEDDBEECFAFFFDDEBBADBADDFBEBAFDFEAFFCEEEFFACDDECCDFBBBAFFCCAAFEACEAABEDBBAAAEFEAEBFBFCBFFFFADDEEFAEAFFCAACCBDBBAEFACCCCEDDCBBACBEACCDFFBAEAABCFADFFDACCAEFAABCDDFBFCAEAEEDADEDFAFEBDEFAFBDAECAFCCAEBEEFEABEFBEFAFFFFCAACBBDDBDBCCBFDFCDDDAFDCCEBCFECDBFCDEEAFEEACFFCCFFCCAFDCFBEACCEEEECDFFBBAACAEDCEDDCEADEFFFADCBDAEBCFDAFBABCACCCEBEFFEDCBBCDBECCEADAEDEFBFEFEDFDAECEBBFAEBFDBCFECBCBCEFCBCFCDFCDEBBDCFDAEEFCBDCDEACEABCEACBBBBDCBFDCBACABCADBDEEADEFBFADDAAFCFEADCFADBFFAEFAEEAAADBDEEEBFADBACEEEEDDEABAADFCADDFCDFECEFBDFDFDBAAEDBEAFFDCADEDFDDFDEEBACFEFCDCDAFABBABDFFECCDCDCABBBFFBACEEAFBFFFCCCCEBFCDFCBABDBBBDFFFFBECACBEAABADDFEBACDBAFDDCBBBFDACFDECEEDCBAACBEBBFEABEBCCACDEFDCABECFEFACFDEBEFCADDBDABEFFEBBFFCCCDFEDDAECEFDCEAEEBCCCABFBAABAFFBFADAAEEACEBFAADCEEEFDEAACECDDBEDBDDBBEABDEAADEBDBCEABFBEFADCDBECBFFAADFEEEAEDAEAECDCDAFAFBBBEBBBBBEECDDBDBACEACEDEAFDDCEBBEBFDECCFCDFDEDFFDBBDBDFBACADBCECDFBBFFBBDBECAEFADDBDBBFAAFCCCFFAAFEBFCEECBDFACBEDACEEFCEDEFBFCAABEEDCDAEBAEFACEDEEFCADCADEAFABDDBEDEBFEACEDCBCBAFFADAFCBDBBFFFCCFBEFCFEDCFDFFFBEDCDBEDAECCEACCCCEBCAEDDBABCCFBEBBDBCABFAFBAADBDBCEEFBFADBAEACEFBEACCAFADBBDEFFEDADABCCECADAABFDDFFDFDCBDAFFEAEFBBFEBBBDEDDCECAAEFFDCEFCFCCEABCAFAEFADFFBCFDECBABEDCEEEDABCDFDCCBEFBACBAABBADEBFCAEDCCBAFADBEBEFCCDAFBFFDCFFDAFFEABECDBFFBEEFFCEABEBBFFFDDDACCCBBCEABEEBCDDEFCACBDDAFBBFFCECADAABEAABEBDFDEDBBBAECDDAEBCBFFBEBADDDEDDAEFEADBECFDEAEBFEBCAFBFACCBDFDADEADCACEDBAEABFECFCFBFBEFCFCCCFFBAECFEDFBCCBABFDCFCFEFEDDAEEADFCEFDADABBCCCFEACBABDDEAEDBBAEBBEAADFBEDEACBDEFDAFECAFADDDBFCCEAFAEDBFDDDFEEABCDBBAAEBCEDAFBFBBFEACAFEAFDCBCCECAFDDAADDADCAEACBBABEDFBFFCCBACCAEEFFACADEFBDDEDFFDCEABABEFDFCBEDCAEDAAFCCABEACCBBEBDCEEDEACCDCEACCFCDFBAEDADBFCFBBCFDBBEFCDECDDFAEAEBBFBADDFDABBBECEAAFEBBDDDDAACEECEBFBEDEBFDFFEDDACFBABDEFACFFBADCBFDCFCACBFEAECDDFECDAFCACADAACEFBDFDFEFBFDADDADBBCACEEDCAEAFFBCCAFEDEEFFFFEAAEDCAADCDECCCCFCFDABAFDDCACAECCCDBEEACFEBCACBFFABDEBEEAEDBBCFDEBDBACAAAADDDECBBBEDFFDDCCBAECDDBEEECBBCCFFDEBDDCEEEEEEBDFCDBDBFBAADAFACBBBCBAEAEFBFACAEAFFAEEFABDEBFACBBCDABABBECDACABABAEABFCAAADEBBACFBCEBBDCAEEABAACBBCCACFDAFBDCCCEDDDEEECFBDCAECCACFACDFCFBBDBDBCDCBDEEEEEACDDBBDDFACCDCCDABCFDCECFFCEEEECCFFFDCAEACFCDEBAEFACFBAEDAFCEDCFDEDCCDFBFCBBBEEEBDBBBDABDBCCDEBBCCCAFCFFCDCCCBEACBEBABFCFEEFDFCECBBFCDADECBFAFAFCABCBECDAAFEEFDDECBBDBFBABFEDAADCBBAEEACEACABFACEECAAFEEBABBDABFAEBCDEDCACCDCBAFFEDCEAEDBEBBEEDBFCDDEFAECFEDFFBDFDDCECAFCACBDEEBFFFFABEABEACEACFFEBEDFBBDBEABFDDDEDEDFABEEEDBECBBCDAFBDADEFDCBBBBBAAABEFDEDAECDCCACAECFBAEBDCEBEAAECDBDCDEEDCFECADCABDCCBCECDCDEBACCBFFBFBBECFEFCEFFDEFFEDFEBBAABFCCFDEBBADAFFAECEDAAEEBEACEDDECFDEAFBFACAEAAAABCDCBABFABDCBFAFBBFAADCAEEECFBFECBAEADEAAFBEDECBFEECCCEEBFAFDFBFCCEBFEFAFECDCDABEAFEADBCEFBEDAEAFBBBBFAFCFAECCBBECBCFEAECEACACCADEFFDCFEDADDBDEEEDDCBCECBEAFBCCFDCBBEFFDEACDCBCFCEFABEADACEEBAEECCDDFAFFEACAEEADEAFAFDAADCABDFDBCAEEADBFBADEFEAEEFDDFAFEAEBECFDCEEBBACAAFDEEFCCEECEDADEABCAAADEACCFADCEFBCEDEEEFEEDDEDBFABBBCCBCCBBECAFFEBEAFEEBEDBAFADCCDFBBEEECFABCFEBACBFDDFCBFCADBDECBEABACEDFBDDABFDFDAABCECDCCBCACEFEEAEAFDEACBCACEDCAFCEAEECFBAEDCCBACBFACBEADADFCFEBCBDBBAAFFDFBCEECCDECFDBAFABCDAADABECCDFEBDEBBCFCCDEFECADDEFFBDAEEDCFABCACFFBFFDCDDBCDADDCBBBDADBCCDCFDABEEDACEFEBEADBBDCAFDEFFCFACCFAFAEAECDDFEBFFAECCACFBCFDDDDFCCDBFAEAFBCDBFFAFADCBCAEFACFEABACFFACFCCADDCCCEEDCEFECEEEEFECAFFDABAAEFBFFECEDEFFEFEFCBBCBEBAEFCCEAAABBADDFDAABFFAAEBCBBDADFBCECBABFFECEEFDECBCECEBADBADEFBDCCDDAECFECFFACEFDAEBFEFEECAEBFDFABEDADAABCECCAFDEDFBAEFFCDDAFFEDBEEAEFFDFDFEEBCCDDAAADAFFFADABCFFCCCEDAEDEAEFFCEBDFBBCBDFBFAAEEDEABBCFADEFBAAFBBBDBDBCFAEBCAAFCBEDEFFEEEBAAADBABCCEBFACEEFFBFBAFBFBCDBFDACDFABBCFCFDABCBCEAAEDCEBABCFBDADABAFDADAEFDEBAFBABFBBFEBACEADFEACAACAAFACDEDFCAABBFDCDADECDDEADDAFDACABDACDACEFBCBFDADAACDFDFCCDFBBDFEFFCDACFBAAAFCADBADCECDFFABCFACEBDADFABCDCDFFABACCBCEFCAEFFDEDCDFAEDFBCBDFAFFCDDCCDEABFAFFDDAAAEAFABAEFCABEFFAFFEBBEEDEECEDBFDAEBFCFBAEDEFDAADFFDCBEBFBBFFAFFBECBDCCFCDCCFCBBFFBFADACABDCFCDDAECCBBAEEEEEADBFADFACFEEBDFDFCBCDCDBBFECFCFAEBDCDAFEFBFDBCDBDFCADFEBCBDCFDDFFFFAACDACFEBECAAACCDFDCDAEEEFCCCBCCFECEACACEEBDEBFFEFEFECBFAECDAEDDACEDCBBBFDDBDFDEBFEDCFBFEAFAEFADBBCBAFCCBFDDFAADFFEDDBDACBCFEAFDDACCDFFCCFFDEEDBDEFCABCAFECDBCEBCADCBEFCEBABCFBECCCEBCDCBABFBEDCABEFECCEBFBECBCAABFADDEEACCEAADDBCEAFEDABCDDFBACFEDFCEAFFDCAAEDABEFEAAECECBDACEFCBBBFDACDCCDECCCFABABFDCBFBECCACDAAFDFDDEDEFCABABAACABECDCFAEDFFDBDECCCCBFDEBFECEFDFCCEEDECEEBDEDCBCABACBBEAFCDADFAFFCADDDDDDDEEFEBAAFEEFEDADABFACABDACCDBEBEDDFDFBECEFECDAECBAEECFFACEFAFFDCCBEDEBABEEADCBBCBCFDCCADBAADFCDEBFEFFCBDACECDFEABBBDEBADAEBFEDBABEFCDCBFCAFCCAEAEDDDCBEBDCDAEFCBBAEFEEFDAACEACAACBEEFAFDEBDCCBAAEFFCAEFDFBAFFDBCAEAFCCDADEAADCAADAFCDAADAFFCAEFBDDEADAEDEBACDAEDFDFEDCEDFBBEAFCDDEFDCEDFCFCDFEEECDCCBBEBBBFFBAEBFEEBDDFDEDFBFCABFDFFCBDEBADEFAFADCDBAABAEEFFBDEDBCBEDFBBBEAEBEDEDAADDBBFFDFFDDEBFBBDBFFBFCDADFBAACCDABBCADBEAAAECEEDAEBFBDADEBAADFCDBAEBBFCCCFDBACAAAEFCCDACFFFFDAADBEAABACABEBCAEEAAACFCAFDBFDBFCDCEDBBFEDECEBCBACEFFAEEDFECAABDBFEABAEDCBDFBFBAFCEADEEDDDEFEDEEFFBCAEDDDDDFADABABAFFEECADEBFCBEDBDCEDDDECDBEAFCEBCBEEBBEFBDBEDEEDCABDEDBEBAAEFDFFEBADABCCABBABCBDFFCFACCCEEDACEBFAAAFBEAFFEBECACFBAFCDAFAFFADECFACAEFEEDDBBFEBBCFBFACBCDEDBABECBEBFEEBBBBCEFEACDFECAFCEADEFABEBEFEEDDEDFDFDEEDFDFCFEFBEECDCDFFDCFBFCFFEACCFCDEBAFCBAEDFDECEBEEAFEECFDBBBEAABDEDDACDACCBCCAEFAFFBCDDEAEABBEECBCBAADFFBBCCFFCFBDADEBACEECECFBEDBEBBDBCEBDCFDABBDBDECBDCADECDBAFCADBDDAEBEADEEFEAABABACCADEEBBBAAFEBBCADCBEAFACDDFAADBAFDBCFFAACFFDCFCCFCACDFDCFCEBCDBAEEACEFEFFBEBBFFFCFAEDFDEFCDDAFCFEEBEEAFDCBCAACBFECBFBCDDBCFACDDEBE",3371));
            System.out.println(new T424_characterReplacement_1().characterReplacement("AABABBA",1));
        }
    }
}
